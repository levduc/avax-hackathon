{
  "contractName": "MerkleTreeWithHistoryMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_treeLevels",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_blockCount",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "updateAtBlock",
          "type": "uint32"
        }
      ],
      "name": "RewardUpdate",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_rroot",
          "type": "bytes32"
        }
      ],
      "name": "isRewardRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardCurrentBlocknum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardCurrentRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardNextBlocknum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardNextRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_leaf",
          "type": "bytes32"
        }
      ],
      "name": "insert",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_treeLevels\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_blockCount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"updateAtBlock\",\"type\":\"uint32\"}],\"name\":\"RewardUpdate\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"}],\"name\":\"insert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rroot\",\"type\":\"bytes32\"}],\"name\":\"isRewardRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardCurrentBlocknum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardCurrentRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardNextBlocknum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardNextRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":\"MerkleTreeWithHistoryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0xdfe345323cdcff1bb33966dda17ac3ed1b19846e29d5c2046ecc759e6f95ff0a\",\"urls\":[\"bzz-raw://c91b94b47af384132dea0f05bf3d6c08737d5da329f76609030a5fff9b5538ce\",\"dweb:/ipfs/QmVaeiDEtJfX3Puw576CV4Ln18P5QbDoPYnRAZZxoL7gaJ\"]},\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":{\"keccak256\":\"0x9f8c3b218a05d8058bd103b0f7381b9540e59aea40b17c981546063a7bacc0ea\",\"urls\":[\"bzz-raw://aefcb9b2c2b8ddaa5d726f431a4e8e1235c1983869311d111b898964f0b21e6c\",\"dweb:/ipfs/QmVEGioiEiRY5oDsffnuY5xfk3Mx38Eka4B2ZEKXyWpxPG\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b50604051620010d7380380620010d7833981810160405260408110156200007b57600080fd5b810190808051906020019092919080519060200190929190505050818160008263ffffffff1611620000f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806200108e6027913960400191505060405180910390fd5b60208263ffffffff16106200015a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620010b56022913960400191505060405180910390fd5b816000806101000a81548163ffffffff021916908363ffffffff1602179055508061271760046101000a81548163ffffffff021916908363ffffffff16021790555060007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050600281908060018154018082558091505090600182039060005260206000200160009091929091909150555060018190806001815401808255809150509060018203906000526020600020016000909192909190915055506000600190505b6000809054906101000a900463ffffffff1663ffffffff168163ffffffff161015620002c3576200025b82836200036c60201b60201c565b915060028290806001815401808255809150509060018203906000526020600020016000909192909190915055506001829080600181540180825580915050906001820390600052602060002001600090919290919091505550808060010191505062000223565b50620002d681826200036c60201b60201c565b600460006127108110620002e657fe5b0181905550600460006127108110620002fb57fe5b0154612714819055504361271560006101000a81548163ffffffff021916908363ffffffff1602179055506004600061271081106200033657fe5b0154612716819055504361271760006101000a81548163ffffffff021916908363ffffffff1602179055505050505050620004c2565b600060606002604051908082528060200260200182016040528015620003a15781602001602082028038833980820191505090505b5090508360001c81600081518110620003b657fe5b6020026020010181815250508260001c81600181518110620003d457fe5b602002602001018181525050600073__Hasher________________________________63c4420fb4836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b838110156200045157808201518184015260208101905062000434565b505050509050019250505060206040518083038186803b1580156200047557600080fd5b505af41580156200048a573d6000803e3d6000fd5b505050506040513d6020811015620004a157600080fd5b810190808051906020019092919050505090508060001b9250505092915050565b610bbc80620004d26000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806390eeb02b116100a2578063cd87a3b411610071578063cd87a3b414610383578063e8295588146103ad578063ec732959146103ef578063f178e47c1461040d578063fc7e9c6f1461044f57610116565b806390eeb02b146102b3578063ba70f757146102dd578063c2b40ae4146102fb578063c526cb5f1461033d57610116565b80633ce0de9b116100e95780633ce0de9b146101dd578063414a37ba146102075780634ecf518b146102255780636d9833e31461024f57806383922d291461029557610116565b80632d287e431461011b5780632e2d40ce1461014957806338bf282e146101735780633a1fa643146101bf575b600080fd5b6101476004803603602081101561013157600080fd5b8101908080359060200190929190505050610479565b005b610151610486565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6101a96004803603604081101561018957600080fd5b81019080803590602001909291908035906020019092919050505061049d565b6040518082815260200191505060405180910390f35b6101c76105eb565b6040518082815260200191505060405180910390f35b6101e56105f2565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61020f610609565b6040518082815260200191505060405180910390f35b61022d61062d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610642565b604051808215151515815260200191505060405180910390f35b61029d6106e6565b6040518082815260200191505060405180910390f35b6102bb6106ed565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6102e5610703565b6040518082815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b8101908080359060200190929190505050610732565b6040518082815260200191505060405180910390f35b6103696004803603602081101561035357600080fd5b810190808035906020019092919050505061074b565b604051808215151515815260200191505060405180910390f35b61038b61077f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6103d9600480360360208110156103c357600080fd5b8101908080359060200190929190505050610785565b6040518082815260200191505060405180910390f35b6103f76107a6565b6040518082815260200191505060405180910390f35b6104396004803603602081101561042357600080fd5b81019080803590602001909291905050506107ca565b6040518082815260200191505060405180910390f35b6104576107eb565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61048281610801565b5050565b61271560009054906101000a900463ffffffff1681565b6000606060026040519080825280602002602001820160405280156104d15781602001602082028038833980820191505090505b5090508360001c816000815181106104e557fe5b6020026020010181815250508260001c8160018151811061050257fe5b602002602001018181525050600073__Hasher________________________________63c4420fb4836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101561057d578082015181840152602081019050610562565b505050509050019250505060206040518083038186803b1580156105a057600080fd5b505af41580156105b4573d6000803e3d6000fd5b505050506040513d60208110156105ca57600080fd5b810190808051906020019092919050505090508060001b9250505092915050565b6127145481565b61271760009054906101000a900463ffffffff1681565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6000809054906101000a900463ffffffff1681565b60008060001b82141561065857600090506106e1565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff16612710811061068457fe5b01548314156106975760019150506106e1565b60008163ffffffff1614156106ac5761271090505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff1614156106705760009150505b919050565b6127165481565b600360009054906101000a900463ffffffff1681565b60006004600360009054906101000a900463ffffffff1663ffffffff16612710811061072b57fe5b0154905090565b600481612710811061074057fe5b016000915090505481565b60008060001b821415610761576000905061077a565b61271454821415610775576001905061077a565b600090505b919050565b61271081565b6002818154811061079257fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b600181815481106107d757fe5b906000526020600020016000915090505481565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690506000809054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff16141561089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610b59602f913960400191505060405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060008090505b6000809054906101000a900463ffffffff1663ffffffff168163ffffffff1610156109c157600060028663ffffffff168161091a57fe5b0663ffffffff1614156109715783925060028163ffffffff168154811061093d57fe5b906000526020600020015491508360018263ffffffff168154811061095e57fe5b9060005260206000200181905550610995565b60018163ffffffff168154811061098457fe5b906000526020600020015492508391505b61099f838361049d565b935060028563ffffffff16816109b157fe5b04945080806001019150506108e3565b5061271063ffffffff166001600360009054906101000a900463ffffffff160163ffffffff16816109ee57fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff166127108110610a3657fe5b018190555061271760049054906101000a900463ffffffff1663ffffffff1661271760009054906101000a900463ffffffff16430363ffffffff1610610b37576127165461271481905550826127168190555061271760009054906101000a900463ffffffff1661271560006101000a81548163ffffffff021916908363ffffffff1602179055504361271760006101000a81548163ffffffff021916908363ffffffff1602179055507f1606ca2afee2c3dcc26cae165c508e922c6f2d01648c2ba5752393b1eb8e6c9d61271560009054906101000a900463ffffffff16604051808263ffffffff1663ffffffff16815260200191505060405180910390a15b6001600360049054906101000a900463ffffffff160394505050505091905056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e206265206164646564a265627a7a72315820ea805dbbb4b04598250ec7464c3eeb54ef8788416246cbd8b6947c9d60b8b22464736f6c634300051100325f747265654c6576656c732073686f756c642062652067726561746572207468616e207a65726f5f747265654c6576656c732073686f756c64206265206c657373207468616e203332",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806390eeb02b116100a2578063cd87a3b411610071578063cd87a3b414610383578063e8295588146103ad578063ec732959146103ef578063f178e47c1461040d578063fc7e9c6f1461044f57610116565b806390eeb02b146102b3578063ba70f757146102dd578063c2b40ae4146102fb578063c526cb5f1461033d57610116565b80633ce0de9b116100e95780633ce0de9b146101dd578063414a37ba146102075780634ecf518b146102255780636d9833e31461024f57806383922d291461029557610116565b80632d287e431461011b5780632e2d40ce1461014957806338bf282e146101735780633a1fa643146101bf575b600080fd5b6101476004803603602081101561013157600080fd5b8101908080359060200190929190505050610479565b005b610151610486565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6101a96004803603604081101561018957600080fd5b81019080803590602001909291908035906020019092919050505061049d565b6040518082815260200191505060405180910390f35b6101c76105eb565b6040518082815260200191505060405180910390f35b6101e56105f2565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61020f610609565b6040518082815260200191505060405180910390f35b61022d61062d565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61027b6004803603602081101561026557600080fd5b8101908080359060200190929190505050610642565b604051808215151515815260200191505060405180910390f35b61029d6106e6565b6040518082815260200191505060405180910390f35b6102bb6106ed565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6102e5610703565b6040518082815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b8101908080359060200190929190505050610732565b6040518082815260200191505060405180910390f35b6103696004803603602081101561035357600080fd5b810190808035906020019092919050505061074b565b604051808215151515815260200191505060405180910390f35b61038b61077f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6103d9600480360360208110156103c357600080fd5b8101908080359060200190929190505050610785565b6040518082815260200191505060405180910390f35b6103f76107a6565b6040518082815260200191505060405180910390f35b6104396004803603602081101561042357600080fd5b81019080803590602001909291905050506107ca565b6040518082815260200191505060405180910390f35b6104576107eb565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61048281610801565b5050565b61271560009054906101000a900463ffffffff1681565b6000606060026040519080825280602002602001820160405280156104d15781602001602082028038833980820191505090505b5090508360001c816000815181106104e557fe5b6020026020010181815250508260001c8160018151811061050257fe5b602002602001018181525050600073__Hasher________________________________63c4420fb4836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101561057d578082015181840152602081019050610562565b505050509050019250505060206040518083038186803b1580156105a057600080fd5b505af41580156105b4573d6000803e3d6000fd5b505050506040513d60208110156105ca57600080fd5b810190808051906020019092919050505090508060001b9250505092915050565b6127145481565b61271760009054906101000a900463ffffffff1681565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b6000809054906101000a900463ffffffff1681565b60008060001b82141561065857600090506106e1565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff16612710811061068457fe5b01548314156106975760019150506106e1565b60008163ffffffff1614156106ac5761271090505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff1614156106705760009150505b919050565b6127165481565b600360009054906101000a900463ffffffff1681565b60006004600360009054906101000a900463ffffffff1663ffffffff16612710811061072b57fe5b0154905090565b600481612710811061074057fe5b016000915090505481565b60008060001b821415610761576000905061077a565b61271454821415610775576001905061077a565b600090505b919050565b61271081565b6002818154811061079257fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b600181815481106107d757fe5b906000526020600020016000915090505481565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690506000809054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff16141561089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610b59602f913960400191505060405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060008090505b6000809054906101000a900463ffffffff1663ffffffff168163ffffffff1610156109c157600060028663ffffffff168161091a57fe5b0663ffffffff1614156109715783925060028163ffffffff168154811061093d57fe5b906000526020600020015491508360018263ffffffff168154811061095e57fe5b9060005260206000200181905550610995565b60018163ffffffff168154811061098457fe5b906000526020600020015492508391505b61099f838361049d565b935060028563ffffffff16816109b157fe5b04945080806001019150506108e3565b5061271063ffffffff166001600360009054906101000a900463ffffffff160163ffffffff16816109ee57fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff166127108110610a3657fe5b018190555061271760049054906101000a900463ffffffff1663ffffffff1661271760009054906101000a900463ffffffff16430363ffffffff1610610b37576127165461271481905550826127168190555061271760009054906101000a900463ffffffff1661271560006101000a81548163ffffffff021916908363ffffffff1602179055504361271760006101000a81548163ffffffff021916908363ffffffff1602179055507f1606ca2afee2c3dcc26cae165c508e922c6f2d01648c2ba5752393b1eb8e6c9d61271560009054906101000a900463ffffffff16604051808263ffffffff1663ffffffff16815260200191505060405180910390a15b6001600360049054906101000a900463ffffffff160394505050505091905056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e206265206164646564a265627a7a72315820ea805dbbb4b04598250ec7464c3eeb54ef8788416246cbd8b6947c9d60b8b22464736f6c63430005110032",
  "sourceMap": "65:246:8:-;;;695:1:3;662:34;;;;;;;;;;;;;;;;;;;;726:1;700:27;;;;;;;;;;;;;;;;;;;;130:110:8;8:9:-1;5:2;;;30:1;27;20:12;5:2;130:110:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;130:110:8;;;;;;;;;;;;;;;;;;;;;;;;;205:11;218;1224:1:3;1210:11;:15;;;1202:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:2;1283:11;:16;;;1275:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:11;1344:6;;:20;;;;;;;;;;;;;;;;;;1394:11;1382:10;;:23;;;;;;;;;;;;;;;;;;1413:19;320:77;1435:19;;1413:41;;1461:5;1472:11;1461:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1461:23:3;;;;;;;;;;;;;;;;;;;;;;1491:14;1511:11;1491:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1491:32:3;;;;;;;;;;;;;;;;;;;;;;1539:8;1550:1;1539:12;;1534:175;1557:6;;;;;;;;;;;1553:10;;:1;:10;;;1534:175;;;1592:39;1606:11;1619;1592:13;;;:39;;:::i;:::-;1578:53;;1639:5;1650:11;1639:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1639:23:3;;;;;;;;;;;;;;;;;;;;;;1670:14;1690:11;1670:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1670:32:3;;;;;;;;;;;;;;;;;;;;;;1565:3;;;;;;;1534:175;;;;1726:39;1740:11;1753;1726:13;;;:39;;:::i;:::-;1715:5;1721:1;1715:8;;;;;;;;:50;;;;1801:5;1807:1;1801:8;;;;;;;;;1783:17;:26;;;;1844:12;1815:21;;:42;;;;;;;;;;;;;;;;;;1879:5;1885:1;1879:8;;;;;;;;;1864:14;:23;;;;1919:12;1893:18;;:39;;;;;;;;;;;;;;;;;;1137:800;;;130:110:8;;65:246;;2421:282:3;2496:7;2512:23;2552:1;2538:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2538:16:3;;;;2512:42;;2581:5;2573:14;;2561:6;2568:1;2561:9;;;;;;;;;;;;;:26;;;;;2614:6;2606:15;;2594:6;2601:1;2594:9;;;;;;;;;;;;;:27;;;;;2628:14;2645:6;:15;2661:6;2645:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2645:23:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2645:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2645:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2645:23:3;;;;;;;;;;;;;;;;2628:40;;2690:6;2682:15;;2675:22;;;;2421:282;;;;:::o;65:246:8:-;;;;;;;",
  "deployedSourceMap": "65:246:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:246:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;244:65:8;;;;;;;;;;;;;;;;;:::i;:::-;;895:35:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2421:282;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2421:282:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;859:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;967;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;165:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;441:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3932:342;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3932:342:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;934:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;662:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4550:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;783:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;783:39:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4284:220;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4284:220:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;731:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;636:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;636:22:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;283:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;601:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;601:31:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;700:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;244:65:8;290:14;298:5;290:7;:14::i;:::-;;244:65;:::o;895:35:3:-;;;;;;;;;;;;;:::o;2421:282::-;2496:7;2512:23;2552:1;2538:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2538:16:3;;;;2512:42;;2581:5;2573:14;;2561:6;2568:1;2561:9;;;;;;;;;;;;;:26;;;;;2614:6;2606:15;;2594:6;2601:1;2594:9;;;;;;;;;;;;;:27;;;;;2628:14;2645:6;:15;2661:6;2645:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2645:23:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2645:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2645:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2645:23:3;;;;;;;;;;;;;;;;2628:40;;2690:6;2682:15;;2675:22;;;;2421:282;;;;:::o;859:32::-;;;;:::o;967:::-;;;;;;;;;;;;;:::o;165:114::-;202:77;165:114;:::o;441:20::-;;;;;;;;;;;;;:::o;3932:342::-;3988:4;4013:1;4004:10;;:5;:10;4000:43;;;4031:5;4024:12;;;;4000:43;4048:8;4059:16;;;;;;;;;;;4048:27;;4081:171;4105:5;4111:1;4105:8;;;;;;;;;;;4096:5;:17;4092:53;;;4132:4;4125:11;;;;;4092:53;4161:1;4156;:6;;;4152:52;;;774:5;4174:21;;4152:52;4211:3;;;;;;;;4234:16;;;;;;;;;;;4229:21;;:1;:21;;;;4081:171;;4264:5;4257:12;;;3932:342;;;;:::o;934:29::-;;;;:::o;662:34::-;;;;;;;;;;;;;:::o;4550:93::-;4593:7;4615:5;4621:16;;;;;;;;;;;4615:23;;;;;;;;;;;4608:30;;4550:93;:::o;783:39::-;;;;;;;;;;;;;;;;;;:::o;4284:220::-;4342:4;4372:1;4362:11;;:6;:11;4358:50;;;4394:5;4387:12;;;;4358:50;4429:17;;4419:6;:27;4415:65;;;4467:4;4460:11;;;;4415:65;4494:5;4487:12;;4284:220;;;;:::o;731:48::-;774:5;731:48;:::o;636:22::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;283:114::-;320:77;283:114;:::o;601:31::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;700:27::-;;;;;;;;;;;;;:::o;2706:1154::-;2755:12;2775:19;2797:9;;;;;;;;;;;2775:31;;2847:6;;;;;;;;;;;2836:17;;2843:1;2836:17;;;2820:33;;:12;:33;;;;2812:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:1;2911:9;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:24;2958:5;2931:32;;2969:12;2987:13;3012:8;3023:1;3012:12;;3007:355;3030:6;;;;;;;;;;;3026:10;;:1;:10;;;3007:355;;;3075:1;3070;3055:12;:16;;;;;;;;:21;;;3051:225;;;3095:16;3088:23;;3129:5;3135:1;3129:8;;;;;;;;;;;;;;;;;;3121:16;;3168;3148:14;3163:1;3148:17;;;;;;;;;;;;;;;;;:36;;;;3051:225;;;3216:14;3231:1;3216:17;;;;;;;;;;;;;;;;;;3209:24;;3251:16;3243:24;;3051:225;3303:26;3317:4;3323:5;3303:13;:26::i;:::-;3284:45;;3354:1;3338:17;;;;;;;;;;;3038:3;;;;;;;3007:355;;;;774:5;3387:42;;3407:1;3388:16;;;;;;;;;;;:20;3387:42;;;;;;;;3368:16;;:61;;;;;;;;;;;;;;;;;;3461:16;3435:5;3441:16;;;;;;;;;;;3435:23;;;;;;;;;;:42;;;;3561:10;;;;;;;;;;;3514:57;;3538:18;;;;;;;;;;;3522:12;3515:41;3514:57;;;3510:319;;3608:14;;3588:17;:34;;;;3649:16;3632:14;:33;;;;3703:18;;;;;;;;;;;3679:21;;:42;;;;;;;;;;;;;;;;;;3759:12;3731:18;;:41;;;;;;;;;;;;;;;;;;3787:35;3800:21;;;;;;;;;;;3787:35;;;;;;;;;;;;;;;;;;;;;;3510:319;3854:1;3842:9;;;;;;;;;;;:13;3835:20;;;;;;2706:1154;;;:::o",
  "source": "pragma solidity 0.5.17;\n\nimport '../MerkleTreeWithHistory.sol';\n\ncontract MerkleTreeWithHistoryMock is MerkleTreeWithHistory {\n\n  constructor (uint32 _treeLevels, uint32 _blockCount) MerkleTreeWithHistory(_treeLevels, _blockCount) public {}\n\n  function insert(bytes32 _leaf) public {\n      _insert(_leaf);\n  }\n}\n",
  "sourcePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
  "ast": {
    "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "exportedSymbols": {
      "MerkleTreeWithHistoryMock": [
        1665
      ]
    },
    "id": 1666,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1639,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "id": 1640,
        "nodeType": "ImportDirective",
        "scope": 1666,
        "sourceUnit": 1482,
        "src": "25:38:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1641,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1481,
              "src": "103:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$1481",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 1642,
            "nodeType": "InheritanceSpecifier",
            "src": "103:21:8"
          }
        ],
        "contractDependencies": [
          1481
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1665,
        "linearizedBaseContracts": [
          1665,
          1481
        ],
        "name": "MerkleTreeWithHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "238:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1654,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1649,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1644,
                    "src": "205:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1650,
                    "name": "_blockCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1646,
                    "src": "218:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1651,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1648,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1481,
                  "src": "183:21:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$1481_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "183:47:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "143:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "name": "_blockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "163:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:40:8"
            },
            "returnParameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:8"
            },
            "scope": 1665,
            "src": "130:110:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1663,
              "nodeType": "Block",
              "src": "282:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1660,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "298:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1659,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "290:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "290:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1662,
                  "nodeType": "ExpressionStatement",
                  "src": "290:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 1664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1656,
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "260:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:15:8"
            },
            "returnParameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:0:8"
            },
            "scope": 1665,
            "src": "244:65:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1666,
        "src": "65:246:8"
      }
    ],
    "src": "0:312:8"
  },
  "legacyAST": {
    "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "exportedSymbols": {
      "MerkleTreeWithHistoryMock": [
        1665
      ]
    },
    "id": 1666,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1639,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "id": 1640,
        "nodeType": "ImportDirective",
        "scope": 1666,
        "sourceUnit": 1482,
        "src": "25:38:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1641,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1481,
              "src": "103:21:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$1481",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 1642,
            "nodeType": "InheritanceSpecifier",
            "src": "103:21:8"
          }
        ],
        "contractDependencies": [
          1481
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1665,
        "linearizedBaseContracts": [
          1665,
          1481
        ],
        "name": "MerkleTreeWithHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "238:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1654,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1649,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1644,
                    "src": "205:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1650,
                    "name": "_blockCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1646,
                    "src": "218:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1651,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1648,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1481,
                  "src": "183:21:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$1481_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "183:47:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "143:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "name": "_blockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1654,
                  "src": "163:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:40:8"
            },
            "returnParameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:0:8"
            },
            "scope": 1665,
            "src": "130:110:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1663,
              "nodeType": "Block",
              "src": "282:27:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1660,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "298:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1659,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1399,
                      "src": "290:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "290:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1662,
                  "nodeType": "ExpressionStatement",
                  "src": "290:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 1664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1656,
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1664,
                  "src": "260:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:15:8"
            },
            "returnParameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:0:8"
            },
            "scope": 1665,
            "src": "244:65:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1666,
        "src": "65:246:8"
      }
    ],
    "src": "0:312:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-29T18:52:21.933Z",
  "devdoc": {
    "methods": {
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
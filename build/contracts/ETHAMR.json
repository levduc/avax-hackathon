{
  "contractName": "ETHAMR",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract WVerifier",
          "name": "_withdrawVerifier",
          "type": "address"
        },
        {
          "internalType": "contract RVerifier",
          "name": "_rewardVerifier",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_d_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_r_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_blockCount",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "rewardNullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Reward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "updateAtBlock",
          "type": "uint32"
        }
      ],
      "name": "RewardUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawNullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "rewardNullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "changeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "d_denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_rwdHash",
          "type": "bytes32"
        }
      ],
      "name": "isRedeem",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isRedeemArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "redeem",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_rroot",
          "type": "bytes32"
        }
      ],
      "name": "isRewardRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_wdrHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "r_denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_rproof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_rroot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_rwdHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardCurrentBlocknum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardCurrentRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardNextBlocknum",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardNextRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "rewardNullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardVerifier",
      "outputs": [
        {
          "internalType": "contract RVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVerifier",
          "type": "address"
        }
      ],
      "name": "updateRewardVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newVerifier",
          "type": "address"
        }
      ],
      "name": "updateWithdrawVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_wdrHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_rwdHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "withdrawVerifier",
      "outputs": [
        {
          "internalType": "contract WVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract WVerifier\",\"name\":\"_withdrawVerifier\",\"type\":\"address\"},{\"internalType\":\"contract RVerifier\",\"name\":\"_rewardVerifier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_d_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_r_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_blockCount\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"rewardNullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"updateAtBlock\",\"type\":\"uint32\"}],\"name\":\"RewardUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawNullifierHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"rewardNullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"d_denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rwdHash\",\"type\":\"bytes32\"}],\"name\":\"isRedeem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isRedeemArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"redeem\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_rroot\",\"type\":\"bytes32\"}],\"name\":\"isRewardRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_wdrHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"r_denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_rproof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_rroot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_rwdHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"reward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardCurrentBlocknum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardCurrentRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardNextBlocknum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardNextRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"rewardNullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardVerifier\",\"outputs\":[{\"internalType\":\"contract RVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVerifier\",\"type\":\"address\"}],\"name\":\"updateRewardVerifier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newVerifier\",\"type\":\"address\"}],\"name\":\"updateWithdrawVerifier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_wdrHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_rwdHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawVerifier\",\"outputs\":[{\"internalType\":\"contract WVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"changeOperator(address)\":{\"details\":\"operator can change his address \"},\"deposit(bytes32)\":{\"details\":\"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.\",\"params\":{\"_commitment\":\"the note commitment, which is PedersenHash(nullifier + secret)\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isRedeemArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"updateWithdrawVerifier(address)\":{\"details\":\"allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address\"},\"withdraw(bytes,bytes32,bytes32,bytes32,address,address,uint256,uint256)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/ETHAMR.sol\":\"ETHAMR\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/AMR.sol\":{\"keccak256\":\"0xc3520aa4ea8c554db914bab43de9985aef89a145476dca66995f8bdd952b9585\",\"urls\":[\"bzz-raw://3f1ac9841a1050931cf5fd8b40cae1a6c0bb7e9e999246c560a23c90dfbb93d2\",\"dweb:/ipfs/QmTauD1wrXUaTsG8hqbFKLurffjKMBwJL1FcgKkqmPEb3L\"]},\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/ETHAMR.sol\":{\"keccak256\":\"0x2eea8f906d590fd6027ef7f9d5deb1d071a7fbd2a8a42cf75fb0857785cea8b9\",\"urls\":[\"bzz-raw://fcd70ad757bf6b4ec01d984a41fa22b285348fb523541dee4199febef67c59c2\",\"dweb:/ipfs/QmPhhyZEcxTWyqJPgSaNVmSoXHkJD6WFTthsXTu9tF92kp\"]},\"/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0xdfe345323cdcff1bb33966dda17ac3ed1b19846e29d5c2046ecc759e6f95ff0a\",\"urls\":[\"bzz-raw://c91b94b47af384132dea0f05bf3d6c08737d5da329f76609030a5fff9b5538ce\",\"dweb:/ipfs/QmVaeiDEtJfX3Puw576CV4Ln18P5QbDoPYnRAZZxoL7gaJ\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb63221b23818d622bfd83d18e0968307e4fcb7a35536bdceded76e1cf8349acd\",\"urls\":[\"bzz-raw://44e1e8c22362c4708a8c3362735f1465f5b05e2f7315e16c7010d694ce019d73\",\"dweb:/ipfs/QmWj9g8X1hxkXRre2kwkEjLBetjuzmSbWHD81bsSojnBkS\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200005557600080fd5b506040516200347f3803806200347f833981810160405260e08110156200007b57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505086868686868686828260008263ffffffff161162000132576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180620033dd6027913960400191505060405180910390fd5b60208263ffffffff161062000193576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620034046022913960400191505060405180910390fd5b816000806101000a81548163ffffffff021916908363ffffffff1602179055508061271760046101000a81548163ffffffff021916908363ffffffff16021790555060007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050600281908060018154018082558091505090600182039060005260206000200160009091929091909150555060018190806001815401808255809150509060018203906000526020600020016000909192909190915055506000600190505b6000809054906101000a900463ffffffff1663ffffffff168163ffffffff161015620002fc576200029482836200055960201b60201c565b91506002829080600181540180825580915050906001820390600052602060002001600090919290919091505550600182908060018154018082558091505090600182039060005260206000200160009091929091909150555080806001019150506200025c565b506200030f81826200055960201b60201c565b6004600061271081106200031f57fe5b01819055506004600061271081106200033457fe5b0154612714819055504361271560006101000a81548163ffffffff021916908363ffffffff1602179055506004600061271081106200036f57fe5b0154612716819055504361271760006101000a81548163ffffffff021916908363ffffffff160217905550505050600161271760086101000a81548160ff0219169083151502179055506000851162000414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018062003426602d913960400191505060405180910390fd5b600084116200046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018062003453602c913960400191505060405180910390fd5b8661271d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508561271e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508061271f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846127188190555083612719819055505050505050505050505050505050620006af565b6000606060026040519080825280602002602001820160405280156200058e5781602001602082028038833980820191505090505b5090508360001c81600081518110620005a357fe5b6020026020010181815250508260001c81600181518110620005c157fe5b602002602001018181525050600073__Hasher________________________________63c4420fb4836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b838110156200063e57808201518184015260208101905062000621565b505050509050019250505060206040518083038186803b1580156200066257600080fd5b505af415801562000677573d6000803e3d6000fd5b505050506040513d60208110156200068e57600080fd5b810190808051906020019092919050505090508060001b9250505092915050565b612d1e80620006bf6000396000f3fe6080604052600436106102045760003560e01c8063839df94511610118578063c526cb5f116100a0578063e82955881161006f578063e829558814610c5d578063ec73295914610cac578063f178e47c14610cd7578063f9406cf314610d26578063fc7e9c6f14610d7d57610204565b8063c526cb5f14610b55578063cd87a3b414610ba8578063e16f7cd414610bdf578063e5285dcc14610c0a57610204565b8063b214faa5116100e7578063b214faa5146108e0578063b74336911461090e578063ba70f757146109fa578063c2b40ae414610a25578063c3f436b714610a7457610204565b8063839df94514610724578063864eb1641461077757806390eeb02b146107ce5780639fa12d0b1461080557610204565b8063414a37ba1161019b5780636d9833e31161016a5780636d9833e3146105d757806375c231281461062a57806378c666971461067b5780638036bcc9146106a657806383922d29146106f957610204565b8063414a37ba146104cd57806343d01520146104f85780634ecf518b14610549578063570ca7351461058057610204565b80632e2d40ce116101d75780632e2d40ce146103db57806338bf282e146104125780633a1fa6431461046b5780633ce0de9b1461049657610204565b806306394c9b1461020957806309087f0c1461025a5780631610f7621461033557806317cc915c14610388575b600080fd5b34801561021557600080fd5b506102586004803603602081101561022c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db4565b005b34801561026657600080fd5b506102de6004803603602081101561027d57600080fd5b810190808035906020019064010000000081111561029a57600080fd5b8201836020820111156102ac57600080fd5b803590602001918460208302840111640100000000831117156102ce57600080fd5b9091929391929390505050610ea0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610321578082015181840152602081019050610306565b505050509050019250505060405180910390f35b34801561034157600080fd5b5061036e6004803603602081101561035857600080fd5b8101908080359060200190929190505050610f3d565b604051808215151515815260200191505060405180910390f35b34801561039457600080fd5b506103c1600480360360208110156103ab57600080fd5b8101908080359060200190929190505050610f5e565b604051808215151515815260200191505060405180910390f35b3480156103e757600080fd5b506103f0610f7f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561041e57600080fd5b506104556004803603604081101561043557600080fd5b810190808035906020019092919080359060200190929190505050610f96565b6040518082815260200191505060405180910390f35b34801561047757600080fd5b506104806110e4565b6040518082815260200191505060405180910390f35b3480156104a257600080fd5b506104ab6110eb565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156104d957600080fd5b506104e2611102565b6040518082815260200191505060405180910390f35b34801561050457600080fd5b506105476004803603602081101561051b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611126565b005b34801561055557600080fd5b5061055e611212565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561058c57600080fd5b50610595611227565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e357600080fd5b50610610600480360360208110156105fa57600080fd5b810190808035906020019092919050505061124e565b604051808215151515815260200191505060405180910390f35b34801561063657600080fd5b506106796004803603602081101561064d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f2565b005b34801561068757600080fd5b506106906113de565b6040518082815260200191505060405180910390f35b3480156106b257600080fd5b506106df600480360360208110156106c957600080fd5b81019080803590602001909291905050506113e5565b604051808215151515815260200191505060405180910390f35b34801561070557600080fd5b5061070e611410565b6040518082815260200191505060405180910390f35b34801561073057600080fd5b5061075d6004803603602081101561074757600080fd5b8101908080359060200190929190505050611417565b604051808215151515815260200191505060405180910390f35b34801561078357600080fd5b5061078c611438565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107da57600080fd5b506107e361145f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561081157600080fd5b506108896004803603602081101561082857600080fd5b810190808035906020019064010000000081111561084557600080fd5b82018360208201111561085757600080fd5b8035906020019184602083028401116401000000008311171561087957600080fd5b9091929391929390505050611475565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108cc5780820151818401526020810190506108b1565b505050509050019250505060405180910390f35b61090c600480360360208110156108f657600080fd5b8101908080359060200190929190505050611512565b005b6109f8600480360361010081101561092557600080fd5b810190808035906020019064010000000081111561094257600080fd5b82018360208201111561095457600080fd5b8035906020019184600183028401116401000000008311171561097657600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506116d7565b005b348015610a0657600080fd5b50610a0f611c8c565b6040518082815260200191505060405180910390f35b348015610a3157600080fd5b50610a5e60048036036020811015610a4857600080fd5b8101908080359060200190929190505050611cbb565b6040518082815260200191505060405180910390f35b610b53600480360360e0811015610a8a57600080fd5b8101908080359060200190640100000000811115610aa757600080fd5b820183602082011115610ab957600080fd5b80359060200191846001830284011164010000000083111715610adb57600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611cd4565b005b348015610b6157600080fd5b50610b8e60048036036020811015610b7857600080fd5b81019080803590602001909291905050506121a5565b604051808215151515815260200191505060405180910390f35b348015610bb457600080fd5b50610bbd6121d9565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610beb57600080fd5b50610bf46121df565b6040518082815260200191505060405180910390f35b348015610c1657600080fd5b50610c4360048036036020811015610c2d57600080fd5b81019080803590602001909291905050506121e6565b604051808215151515815260200191505060405180910390f35b348015610c6957600080fd5b50610c9660048036036020811015610c8057600080fd5b8101908080359060200190929190505050612211565b6040518082815260200191505060405180910390f35b348015610cb857600080fd5b50610cc1612232565b6040518082815260200191505060405180910390f35b348015610ce357600080fd5b50610d1060048036036020811015610cfa57600080fd5b8101908080359060200190929190505050612256565b6040518082815260200191505060405180910390f35b348015610d3257600080fd5b50610d3b612277565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8957600080fd5b50610d9261229e565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c906025913960400191505060405180910390fd5b8061271f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606082829050604051908082528060200260200182016040528015610ed45781602001602082028038833980820191505090505b50905060008090505b83839050811015610f3657610f03848483818110610ef757fe5b905060200201356121e6565b15610f29576001828281518110610f1657fe5b6020026020010190151590811515815250505b8080600101915050610edd565b5092915050565b61271b6020528060005260406000206000915054906101000a900460ff1681565b61271a6020528060005260406000206000915054906101000a900460ff1681565b61271560009054906101000a900463ffffffff1681565b600060606002604051908082528060200260200182016040528015610fca5781602001602082028038833980820191505090505b5090508360001c81600081518110610fde57fe5b6020026020010181815250508260001c81600181518110610ffb57fe5b602002602001018181525050600073__Hasher________________________________63c4420fb4836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101561107657808201518184015260208101905061105b565b505050509050019250505060206040518083038186803b15801561109957600080fd5b505af41580156110ad573d6000803e3d6000fd5b505050506040513d60208110156110c357600080fd5b810190808051906020019092919050505090508060001b9250505092915050565b6127145481565b61271760009054906101000a900463ffffffff1681565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c906025913960400191505060405180910390fd5b8061271e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900463ffffffff1681565b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060001b82141561126457600090506112ed565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff16612710811061129057fe5b01548314156112a35760019150506112ed565b60008163ffffffff1614156112b85761271090505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff16141561127c5760009150505b919050565b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611399576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c906025913960400191505060405180910390fd5b8061271d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6127195481565b600061271b600083815260200190815260200160002060009054906101000a900460ff169050919050565b6127165481565b61271c6020528060005260406000206000915054906101000a900460ff1681565b61271d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900463ffffffff1681565b6060828290506040519080825280602002602001820160405280156114a95781602001602082028038833980820191505090505b50905060008090505b8383905081101561150b576114d88484838181106114cc57fe5b905060200201356121e6565b156114fe5760018282815181106114eb57fe5b6020026020010190151590811515815250505b80806001019150506114b2565b5092915050565b61271760089054906101000a900460ff16611595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600061271760086101000a81548160ff02191690831515021790555061271c600082815260200190815260200160002060009054906101000a900460ff1615611629576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612bfe6021913960400191505060405180910390fd5b6000611634826122b4565b9050600161271c600084815260200190815260200160002060006101000a81548160ff02191690831515021790555061166b61260b565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1663ffffffff1681526020018281526020019250505060405180910390a250600161271760086101000a81548160ff02191690831515021790555050565b61271760089054906101000a900460ff1661175a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600061271760086101000a81548160ff021916908315150217905550612718548211156117ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b61271a600087815260200190815260200160002060009054906101000a900460ff1615611867576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612b926038913960400191505060405180910390fd5b61271a600086815260200190815260200160002060009054906101000a900460ff16156118df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612b5c6036913960400191505060405180910390fd5b6118e88761124e565b61195a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b61271d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663598da1d18a8a6040518060e001604052808c60001c81526020018b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600760200280838360005b83811015611a41578082015181840152602081019050611a26565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611a9357600080fd5b505af1158015611aa7573d6000803e3d6000fd5b505050506040513d6020811015611abd57600080fd5b8101908080519060200190929190505050611b40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b600161271a600088815260200190815260200160002060006101000a81548160ff021916908315150217905550600161271a600087815260200190815260200160002060006101000a81548160ff021916908315150217905550600161271b600087815260200190815260200160002060006101000a81548160ff021916908315150217905550611bd384848484612668565b8273ffffffffffffffffffffffffffffffffffffffff167fb9632a5273eccb6a6c4f89035ced459ebb3db29e0ad807721982f4960602242d85888886604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a2600161271760086101000a81548160ff021916908315150217905550505050505050505050565b60006004600360009054906101000a900463ffffffff1663ffffffff166127108110611cb457fe5b0154905090565b6004816127108110611cc957fe5b016000915090505481565b61271760089054906101000a900460ff16611d57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600061271760086101000a81548160ff02191690831515021790555061271954821115611dec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b61271b600086815260200190815260200160002060009054906101000a900460ff1615611e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c446029913960400191505060405180910390fd5b611e6d866121a5565b611edf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b61271e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015611fbd578082015181840152602081019050611fa2565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561200f57600080fd5b505af1158015612023573d6000803e3d6000fd5b505050506040513d602081101561203957600080fd5b81019080805190602001909291905050506120bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e76616c6964207265776172642070726f6f6600000000000000000000000081525060200191505060405180910390fd5b600161271b600087815260200190815260200160002060006101000a81548160ff0219169083151502179055506120f5848484846128ae565b8273ffffffffffffffffffffffffffffffffffffffff167fd372214d98616c555c2fbc3e9e729a309374d6c2aa7c20e84c73c4af5e44e618858785604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2600161271760086101000a81548160ff0219169083151502179055505050505050505050565b60008060001b8214156121bb57600090506121d4565b612714548214156121cf57600190506121d4565b600090505b919050565b61271081565b6127185481565b600061271a600083815260200190815260200160002060009054906101000a900460ff169050919050565b6002818154811061221e57fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6001818154811061226357fe5b906000526020600020016000915090505481565b61271e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690506000809054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415612351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612af5602f913960400191505060405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060008090505b6000809054906101000a900463ffffffff1663ffffffff168163ffffffff16101561247457600060028663ffffffff16816123cd57fe5b0663ffffffff1614156124245783925060028163ffffffff16815481106123f057fe5b906000526020600020015491508360018263ffffffff168154811061241157fe5b9060005260206000200181905550612448565b60018163ffffffff168154811061243757fe5b906000526020600020015492508391505b6124528383610f96565b935060028563ffffffff168161246457fe5b0494508080600101915050612396565b5061271063ffffffff166001600360009054906101000a900463ffffffff160163ffffffff16816124a157fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff1661271081106124e957fe5b018190555061271760049054906101000a900463ffffffff1663ffffffff1661271760009054906101000a900463ffffffff16430363ffffffff16106125ea576127165461271481905550826127168190555061271760009054906101000a900463ffffffff1661271560006101000a81548163ffffffff021916908363ffffffff1602179055504361271760006101000a81548163ffffffff021916908363ffffffff1602179055507f1606ca2afee2c3dcc26cae165c508e922c6f2d01648c2ba5752393b1eb8e6c9d61271560009054906101000a900463ffffffff16604051808263ffffffff1663ffffffff16815260200191505060405180910390a15b6001600360049054906101000a900463ffffffff1603945050505050919050565b612718543414612666576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612b246038913960400191505060405180910390fd5b565b600034146126c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612cb56035913960400191505060405180910390fd5b6000811461271a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612bca6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1683612718540360405180600001905060006040518083038185875af1925050503d806000811461277f576040519150601f19603f3d011682016040523d82523d6000602084013e612784565b606091505b50509050806127de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c1f6025913960400191505060405180910390fd5b60008311156128a7578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114612845576040519150601f19603f3d011682016040523d82523d6000602084013e61284a565b606091505b505080915050806128a6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6d6023913960400191505060405180910390fd5b5b5050505050565b60003414612907576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612cb56035913960400191505060405180910390fd5b60008114612960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612bca6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1683612719540360405180600001905060006040518083038185875af1925050503d80600081146129c5576040519150601f19603f3d011682016040523d82523d6000602084013e6129ca565b606091505b5050905080612a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c1f6025913960400191505060405180910390fd5b6000831115612aed578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114612a8b576040519150601f19603f3d011682016040523d82523d6000602084013e612a90565b606091505b50508091505080612aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6d6023913960400191505060405180910390fd5b5b505050505056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e206265206164646564506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e54686520726577617264206e6f746520686173206265656e20616c7265616479207370656e7420666f72207769746864726177696e67546865207769746864726177206e6f746520686173206265656e20616c7265616479207370656e7420666f72207769746864726177696e67526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636554686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f207468727554686520726577617264206e6f746520686173206265656e20616c72656164792072656465656d65647061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a265627a7a7231582031022f220e085ba8b332f14d0fbe74b6ac0043b0955a62eb69ddbd5be9121f7a64736f6c634300051100325f747265654c6576656c732073686f756c642062652067726561746572207468616e207a65726f5f747265654c6576656c732073686f756c64206265206c657373207468616e2033324465706f7369742064656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305265776172642064656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e2030",
  "deployedBytecode": "0x6080604052600436106102045760003560e01c8063839df94511610118578063c526cb5f116100a0578063e82955881161006f578063e829558814610c5d578063ec73295914610cac578063f178e47c14610cd7578063f9406cf314610d26578063fc7e9c6f14610d7d57610204565b8063c526cb5f14610b55578063cd87a3b414610ba8578063e16f7cd414610bdf578063e5285dcc14610c0a57610204565b8063b214faa5116100e7578063b214faa5146108e0578063b74336911461090e578063ba70f757146109fa578063c2b40ae414610a25578063c3f436b714610a7457610204565b8063839df94514610724578063864eb1641461077757806390eeb02b146107ce5780639fa12d0b1461080557610204565b8063414a37ba1161019b5780636d9833e31161016a5780636d9833e3146105d757806375c231281461062a57806378c666971461067b5780638036bcc9146106a657806383922d29146106f957610204565b8063414a37ba146104cd57806343d01520146104f85780634ecf518b14610549578063570ca7351461058057610204565b80632e2d40ce116101d75780632e2d40ce146103db57806338bf282e146104125780633a1fa6431461046b5780633ce0de9b1461049657610204565b806306394c9b1461020957806309087f0c1461025a5780631610f7621461033557806317cc915c14610388575b600080fd5b34801561021557600080fd5b506102586004803603602081101561022c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db4565b005b34801561026657600080fd5b506102de6004803603602081101561027d57600080fd5b810190808035906020019064010000000081111561029a57600080fd5b8201836020820111156102ac57600080fd5b803590602001918460208302840111640100000000831117156102ce57600080fd5b9091929391929390505050610ea0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610321578082015181840152602081019050610306565b505050509050019250505060405180910390f35b34801561034157600080fd5b5061036e6004803603602081101561035857600080fd5b8101908080359060200190929190505050610f3d565b604051808215151515815260200191505060405180910390f35b34801561039457600080fd5b506103c1600480360360208110156103ab57600080fd5b8101908080359060200190929190505050610f5e565b604051808215151515815260200191505060405180910390f35b3480156103e757600080fd5b506103f0610f7f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561041e57600080fd5b506104556004803603604081101561043557600080fd5b810190808035906020019092919080359060200190929190505050610f96565b6040518082815260200191505060405180910390f35b34801561047757600080fd5b506104806110e4565b6040518082815260200191505060405180910390f35b3480156104a257600080fd5b506104ab6110eb565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156104d957600080fd5b506104e2611102565b6040518082815260200191505060405180910390f35b34801561050457600080fd5b506105476004803603602081101561051b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611126565b005b34801561055557600080fd5b5061055e611212565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561058c57600080fd5b50610595611227565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e357600080fd5b50610610600480360360208110156105fa57600080fd5b810190808035906020019092919050505061124e565b604051808215151515815260200191505060405180910390f35b34801561063657600080fd5b506106796004803603602081101561064d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f2565b005b34801561068757600080fd5b506106906113de565b6040518082815260200191505060405180910390f35b3480156106b257600080fd5b506106df600480360360208110156106c957600080fd5b81019080803590602001909291905050506113e5565b604051808215151515815260200191505060405180910390f35b34801561070557600080fd5b5061070e611410565b6040518082815260200191505060405180910390f35b34801561073057600080fd5b5061075d6004803603602081101561074757600080fd5b8101908080359060200190929190505050611417565b604051808215151515815260200191505060405180910390f35b34801561078357600080fd5b5061078c611438565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107da57600080fd5b506107e361145f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561081157600080fd5b506108896004803603602081101561082857600080fd5b810190808035906020019064010000000081111561084557600080fd5b82018360208201111561085757600080fd5b8035906020019184602083028401116401000000008311171561087957600080fd5b9091929391929390505050611475565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108cc5780820151818401526020810190506108b1565b505050509050019250505060405180910390f35b61090c600480360360208110156108f657600080fd5b8101908080359060200190929190505050611512565b005b6109f8600480360361010081101561092557600080fd5b810190808035906020019064010000000081111561094257600080fd5b82018360208201111561095457600080fd5b8035906020019184600183028401116401000000008311171561097657600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506116d7565b005b348015610a0657600080fd5b50610a0f611c8c565b6040518082815260200191505060405180910390f35b348015610a3157600080fd5b50610a5e60048036036020811015610a4857600080fd5b8101908080359060200190929190505050611cbb565b6040518082815260200191505060405180910390f35b610b53600480360360e0811015610a8a57600080fd5b8101908080359060200190640100000000811115610aa757600080fd5b820183602082011115610ab957600080fd5b80359060200191846001830284011164010000000083111715610adb57600080fd5b90919293919293908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611cd4565b005b348015610b6157600080fd5b50610b8e60048036036020811015610b7857600080fd5b81019080803590602001909291905050506121a5565b604051808215151515815260200191505060405180910390f35b348015610bb457600080fd5b50610bbd6121d9565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b348015610beb57600080fd5b50610bf46121df565b6040518082815260200191505060405180910390f35b348015610c1657600080fd5b50610c4360048036036020811015610c2d57600080fd5b81019080803590602001909291905050506121e6565b604051808215151515815260200191505060405180910390f35b348015610c6957600080fd5b50610c9660048036036020811015610c8057600080fd5b8101908080359060200190929190505050612211565b6040518082815260200191505060405180910390f35b348015610cb857600080fd5b50610cc1612232565b6040518082815260200191505060405180910390f35b348015610ce357600080fd5b50610d1060048036036020811015610cfa57600080fd5b8101908080359060200190929190505050612256565b6040518082815260200191505060405180910390f35b348015610d3257600080fd5b50610d3b612277565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8957600080fd5b50610d9261229e565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c906025913960400191505060405180910390fd5b8061271f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606082829050604051908082528060200260200182016040528015610ed45781602001602082028038833980820191505090505b50905060008090505b83839050811015610f3657610f03848483818110610ef757fe5b905060200201356121e6565b15610f29576001828281518110610f1657fe5b6020026020010190151590811515815250505b8080600101915050610edd565b5092915050565b61271b6020528060005260406000206000915054906101000a900460ff1681565b61271a6020528060005260406000206000915054906101000a900460ff1681565b61271560009054906101000a900463ffffffff1681565b600060606002604051908082528060200260200182016040528015610fca5781602001602082028038833980820191505090505b5090508360001c81600081518110610fde57fe5b6020026020010181815250508260001c81600181518110610ffb57fe5b602002602001018181525050600073__Hasher________________________________63c4420fb4836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101561107657808201518184015260208101905061105b565b505050509050019250505060206040518083038186803b15801561109957600080fd5b505af41580156110ad573d6000803e3d6000fd5b505050506040513d60208110156110c357600080fd5b810190808051906020019092919050505090508060001b9250505092915050565b6127145481565b61271760009054906101000a900463ffffffff1681565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111cd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c906025913960400191505060405180910390fd5b8061271e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900463ffffffff1681565b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060001b82141561126457600090506112ed565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff16612710811061129057fe5b01548314156112a35760019150506112ed565b60008163ffffffff1614156112b85761271090505b808060019003915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff16141561127c5760009150505b919050565b61271f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611399576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c906025913960400191505060405180910390fd5b8061271d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6127195481565b600061271b600083815260200190815260200160002060009054906101000a900460ff169050919050565b6127165481565b61271c6020528060005260406000206000915054906101000a900460ff1681565b61271d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900463ffffffff1681565b6060828290506040519080825280602002602001820160405280156114a95781602001602082028038833980820191505090505b50905060008090505b8383905081101561150b576114d88484838181106114cc57fe5b905060200201356121e6565b156114fe5760018282815181106114eb57fe5b6020026020010190151590811515815250505b80806001019150506114b2565b5092915050565b61271760089054906101000a900460ff16611595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600061271760086101000a81548160ff02191690831515021790555061271c600082815260200190815260200160002060009054906101000a900460ff1615611629576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612bfe6021913960400191505060405180910390fd5b6000611634826122b4565b9050600161271c600084815260200190815260200160002060006101000a81548160ff02191690831515021790555061166b61260b565b817fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff1968242604051808363ffffffff1663ffffffff1681526020018281526020019250505060405180910390a250600161271760086101000a81548160ff02191690831515021790555050565b61271760089054906101000a900460ff1661175a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600061271760086101000a81548160ff021916908315150217905550612718548211156117ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b61271a600087815260200190815260200160002060009054906101000a900460ff1615611867576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612b926038913960400191505060405180910390fd5b61271a600086815260200190815260200160002060009054906101000a900460ff16156118df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612b5c6036913960400191505060405180910390fd5b6118e88761124e565b61195a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b61271d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663598da1d18a8a6040518060e001604052808c60001c81526020018b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600760200280838360005b83811015611a41578082015181840152602081019050611a26565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b158015611a9357600080fd5b505af1158015611aa7573d6000803e3d6000fd5b505050506040513d6020811015611abd57600080fd5b8101908080519060200190929190505050611b40576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642077697468647261772070726f6f660000000000000000000081525060200191505060405180910390fd5b600161271a600088815260200190815260200160002060006101000a81548160ff021916908315150217905550600161271a600087815260200190815260200160002060006101000a81548160ff021916908315150217905550600161271b600087815260200190815260200160002060006101000a81548160ff021916908315150217905550611bd384848484612668565b8273ffffffffffffffffffffffffffffffffffffffff167fb9632a5273eccb6a6c4f89035ced459ebb3db29e0ad807721982f4960602242d85888886604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390a2600161271760086101000a81548160ff021916908315150217905550505050505050505050565b60006004600360009054906101000a900463ffffffff1663ffffffff166127108110611cb457fe5b0154905090565b6004816127108110611cc957fe5b016000915090505481565b61271760089054906101000a900460ff16611d57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b600061271760086101000a81548160ff02191690831515021790555061271954821115611dec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4665652065786365656473207472616e736665722076616c756500000000000081525060200191505060405180910390fd5b61271b600086815260200190815260200160002060009054906101000a900460ff1615611e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c446029913960400191505060405180910390fd5b611e6d866121a5565b611edf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f740000000081525060200191505060405180910390fd5b61271e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663695ef6f989896040518060c001604052808b60001c81526020018a60001c81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b83811015611fbd578082015181840152602081019050611fa2565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561200f57600080fd5b505af1158015612023573d6000803e3d6000fd5b505050506040513d602081101561203957600080fd5b81019080805190602001909291905050506120bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e76616c6964207265776172642070726f6f6600000000000000000000000081525060200191505060405180910390fd5b600161271b600087815260200190815260200160002060006101000a81548160ff0219169083151502179055506120f5848484846128ae565b8273ffffffffffffffffffffffffffffffffffffffff167fd372214d98616c555c2fbc3e9e729a309374d6c2aa7c20e84c73c4af5e44e618858785604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2600161271760086101000a81548160ff0219169083151502179055505050505050505050565b60008060001b8214156121bb57600090506121d4565b612714548214156121cf57600190506121d4565b600090505b919050565b61271081565b6127185481565b600061271a600083815260200190815260200160002060009054906101000a900460ff169050919050565b6002818154811061221e57fe5b906000526020600020016000915090505481565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6001818154811061226357fe5b906000526020600020016000915090505481565b61271e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900463ffffffff1681565b600080600360049054906101000a900463ffffffff1690506000809054906101000a900463ffffffff1663ffffffff16600263ffffffff160a63ffffffff168163ffffffff161415612351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612af5602f913960400191505060405180910390fd5b6001600360048282829054906101000a900463ffffffff160192506101000a81548163ffffffff021916908363ffffffff160217905550600083905060008060008090505b6000809054906101000a900463ffffffff1663ffffffff168163ffffffff16101561247457600060028663ffffffff16816123cd57fe5b0663ffffffff1614156124245783925060028163ffffffff16815481106123f057fe5b906000526020600020015491508360018263ffffffff168154811061241157fe5b9060005260206000200181905550612448565b60018163ffffffff168154811061243757fe5b906000526020600020015492508391505b6124528383610f96565b935060028563ffffffff168161246457fe5b0494508080600101915050612396565b5061271063ffffffff166001600360009054906101000a900463ffffffff160163ffffffff16816124a157fe5b06600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff1661271081106124e957fe5b018190555061271760049054906101000a900463ffffffff1663ffffffff1661271760009054906101000a900463ffffffff16430363ffffffff16106125ea576127165461271481905550826127168190555061271760009054906101000a900463ffffffff1661271560006101000a81548163ffffffff021916908363ffffffff1602179055504361271760006101000a81548163ffffffff021916908363ffffffff1602179055507f1606ca2afee2c3dcc26cae165c508e922c6f2d01648c2ba5752393b1eb8e6c9d61271560009054906101000a900463ffffffff16604051808263ffffffff1663ffffffff16815260200191505060405180910390a15b6001600360049054906101000a900463ffffffff1603945050505050919050565b612718543414612666576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612b246038913960400191505060405180910390fd5b565b600034146126c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612cb56035913960400191505060405180910390fd5b6000811461271a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612bca6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1683612718540360405180600001905060006040518083038185875af1925050503d806000811461277f576040519150601f19603f3d011682016040523d82523d6000602084013e612784565b606091505b50509050806127de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c1f6025913960400191505060405180910390fd5b60008311156128a7578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114612845576040519150601f19603f3d011682016040523d82523d6000602084013e61284a565b606091505b505080915050806128a6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6d6023913960400191505060405180910390fd5b5b5050505050565b60003414612907576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612cb56035913960400191505060405180910390fd5b60008114612960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612bca6034913960400191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff1683612719540360405180600001905060006040518083038185875af1925050503d80600081146129c5576040519150601f19603f3d011682016040523d82523d6000602084013e6129ca565b606091505b5050905080612a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612c1f6025913960400191505060405180910390fd5b6000831115612aed578373ffffffffffffffffffffffffffffffffffffffff168360405180600001905060006040518083038185875af1925050503d8060008114612a8b576040519150601f19603f3d011682016040523d82523d6000602084013e612a90565b606091505b50508091505080612aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612c6d6023913960400191505060405180910390fd5b5b505050505056fe4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656166732063616e206265206164646564506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e54686520726577617264206e6f746520686173206265656e20616c7265616479207370656e7420666f72207769746864726177696e67546865207769746864726177206e6f746520686173206265656e20616c7265616479207370656e7420666f72207769746864726177696e67526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636554686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f207468727554686520726577617264206e6f746520686173206265656e20616c72656164792072656465656d65647061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754f6e6c79206f70657261746f722063616e2063616c6c20746869732066756e6374696f6e2e4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a265627a7a7231582031022f220e085ba8b332f14d0fbe74b6ac0043b0955a62eb69ddbd5be9121f7a64736f6c63430005110032",
  "sourceMap": "47:1709:2:-;;;695:1:3;662:34;;;;;;;;;;;;;;;;;;;;726:1;700:27;;;;;;;;;;;;;;;;;;;;74:344:2;8:9:-1;5:2;;;30:1;27;20:12;5:2;74:344:2;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;74:344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:17;312:15;329;346;363:17;382:11;395:9;2227:17:0;2246:11;1224:1:3;1210:11;:15;;;1202:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:2;1283:11;:16;;;1275:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:11;1344:6;;:20;;;;;;;;;;;;;;;;;;1394:11;1382:10;;:23;;;;;;;;;;;;;;;;;;1413:19;320:77;1435:19;;1413:41;;1461:5;1472:11;1461:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1461:23:3;;;;;;;;;;;;;;;;;;;;;;1491:14;1511:11;1491:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1491:32:3;;;;;;;;;;;;;;;;;;;;;;1539:8;1550:1;1539:12;;1534:175;1557:6;;;;;;;;;;;1553:10;;:1;:10;;;1534:175;;;1592:39;1606:11;1619;1592:13;;;:39;;:::i;:::-;1578:53;;1639:5;1650:11;1639:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1639:23:3;;;;;;;;;;;;;;;;;;;;;;1670:14;1690:11;1670:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1670:32:3;;;;;;;;;;;;;;;;;;;;;;1565:3;;;;;;;1534:175;;;;1726:39;1740:11;1753;1726:13;;;:39;;:::i;:::-;1715:5;1721:1;1715:8;;;;;;;;:50;;;;1801:5;1807:1;1801:8;;;;;;;;;1783:17;:26;;;;1844:12;1815:21;;:42;;;;;;;;;;;;;;;;;;1879:5;1885:1;1879:8;;;;;;;;;1864:14;:23;;;;1919:12;1893:18;;:39;;;;;;;;;;;;;;;;;;1137:800;;;1435:4:19;1421:11;;:18;;;;;;;;;;;;;;;;;;2298:1:0;2280:15;:19;2272:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:1;2363:15;:19;2355:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:17;2437:16;;:36;;;;;;;;;;;;;;;;;;2496:15;2479:14;;:32;;;;;;;;;;;;;;;;;;2556:9;2545:8;;:20;;;;;;;;;;;;;;;;;;2588:15;2571:14;:32;;;;2626:15;2609:14;:32;;;;1925:721;;;;;;;74:344:2;;;;;;;47:1709;;2421:282:3;2496:7;2512:23;2552:1;2538:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2538:16:3;;;;2512:42;;2581:5;2573:14;;2561:6;2568:1;2561:9;;;;;;;;;;;;;:26;;;;;2614:6;2606:15;;2594:6;2601:1;2594:9;;;;;;;;;;;;;:27;;;;;2628:14;2645:6;:15;2661:6;2645:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2645:23:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2645:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2645:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2645:23:3;;;;;;;;;;;;;;;;2628:40;;2690:6;2682:15;;2675:22;;;;2421:282;;;;:::o;47:1709:2:-;;;;;;;",
  "deployedSourceMap": "47:1709:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7612:102:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7612:102:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7612:102:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;6719:297;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6719:297:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6719:297:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6719:297:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6719:297:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6719:297:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6719:297:0;;;;;;;;;;;;;;;;;639:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:53:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;639:53:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;559:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:47:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;559:47:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;895:35:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:35:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2421:282;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2421:282:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2421:282:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;859:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;859:32:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;967;;8:9:-1;5:2;;;30:1;27;20:12;5:2;967:32:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;165:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:114:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7437:125:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7437:125:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7437:125:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;441:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:20:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1035:23:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3932:342:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3932:342:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3932:342:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7276:129:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7276:129:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7276:129:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;497:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6192:111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6192:111:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6192:111:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;934:29:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;934:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;714:43:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:43:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;714:43:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;787:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;787:33:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;662:34:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;662:34:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6364:293:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6364:293:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6364:293:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6364:293:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6364:293:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6364:293:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6364:293:0;;;;;;;;;;;;;;;;;2919:325;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2919:325:0;;;;;;;;;;;;;;;;;:::i;:::-;;3740:1066;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3740:1066:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3740:1066:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3740:1066:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3740:1066:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4550:93:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4550:93:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;783:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;783:39:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;783:39:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4820:847:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4820:847:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4820:847:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4820:847:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4820:847:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4284:220:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4284:220:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4284:220:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;731:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;731:48:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;442:29:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;442:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6084:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6084:104:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6084:104:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;636:22:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:22:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;636:22:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;283:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:114:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;601:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;601:31:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;601:31:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;845::0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;845:31:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;700:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;700:27:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7612:102:0;1112:8;;;;;;;;;;;1098:22;;:10;:22;;;1090:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7697:12;7686:8;;:23;;;;;;;;;;;;;;;;;;7612:102;:::o;6719:297::-;6801:20;6849:16;;:23;;6838:35;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6838:35:0;;;;6829:44;;6883:6;6892:1;6883:10;;6879:133;6899:16;;:23;;6895:1;:27;6879:133;;;6941:28;6949:16;;6966:1;6949:19;;;;;;;;;;;;;6941:7;:28::i;:::-;6937:69;;;6993:4;6981:6;6988:1;6981:9;;;;;;;;;;;;;:16;;;;;;;;;;;6937:69;6924:3;;;;;;;6879:133;;;;6719:297;;;;:::o;639:53::-;;;;;;;;;;;;;;;;;;;;;;:::o;559:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;895:35:3:-;;;;;;;;;;;;;:::o;2421:282::-;2496:7;2512:23;2552:1;2538:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2538:16:3;;;;2512:42;;2581:5;2573:14;;2561:6;2568:1;2561:9;;;;;;;;;;;;;:26;;;;;2614:6;2606:15;;2594:6;2601:1;2594:9;;;;;;;;;;;;;:27;;;;;2628:14;2645:6;:15;2661:6;2645:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2645:23:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2645:23:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2645:23:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2645:23:3;;;;;;;;;;;;;;;;2628:40;;2690:6;2682:15;;2675:22;;;;2421:282;;;;:::o;859:32::-;;;;:::o;967:::-;;;;;;;;;;;;;:::o;165:114::-;202:77;165:114;:::o;7437:125:0:-;1112:8;;;;;;;;;;;1098:22;;:10;:22;;;1090:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7544:12;7517:14;;:40;;;;;;;;;;;;;;;;;;7437:125;:::o;441:20:3:-;;;;;;;;;;;;;:::o;1035:23:0:-;;;;;;;;;;;;;:::o;3932:342:3:-;3988:4;4013:1;4004:10;;:5;:10;4000:43;;;4031:5;4024:12;;;;4000:43;4048:8;4059:16;;;;;;;;;;;4048:27;;4081:171;4105:5;4111:1;4105:8;;;;;;;;;;;4096:5;:17;4092:53;;;4132:4;4125:11;;;;;4092:53;4161:1;4156;:6;;;4152:52;;;774:5;4174:21;;4152:52;4211:3;;;;;;;;4234:16;;;;;;;;;;;4229:21;;:1;:21;;;;4081:171;;4264:5;4257:12;;;3932:342;;;;:::o;7276:129:0:-;1112:8;;;;;;;;;;;1098:22;;:10;:22;;;1090:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7387:12;7358:16;;:42;;;;;;;;;;;;;;;;;;7276:129;:::o;497:29::-;;;;:::o;6192:111::-;6248:4;6267:21;:31;6289:8;6267:31;;;;;;;;;;;;;;;;;;;;;6260:38;;6192:111;;;:::o;934:29:3:-;;;;:::o;714:43:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;787:33::-;;;;;;;;;;;;;:::o;662:34:3:-;;;;;;;;;;;;;:::o;6364:293:0:-;6445:19;6491:16;;:23;;6480:35;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6480:35:0;;;;6472:43;;6525:6;6534:1;6525:10;;6521:132;6541:16;;:23;;6537:1;:27;6521:132;;;6583:28;6591:16;;6608:1;6591:19;;;;;;;;;;;;;6583:7;:28::i;:::-;6579:68;;;6634:4;6623:5;6629:1;6623:8;;;;;;;;;;;;;:15;;;;;;;;;;;6579:68;6566:3;;;;;;;6521:132;;;;6364:293;;;;:::o;2919:325::-;1934:11:19;;;;;;;;;;;1926:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:5;2056:11;;:19;;;;;;;;;;;;;;;;;;3003:11:0;:24;3015:11;3003:24;;;;;;;;;;;;;;;;;;;;;3002:25;2994:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3072:20;3095;3103:11;3095:7;:20::i;:::-;3072:43;;3148:4;3121:11;:24;3133:11;3121:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3158:17;:15;:17::i;:::-;3195:11;3187:52;3208:13;3223:15;3187:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;2086:1:19;2244:4;2230:11;;:18;;;;;;;;;;;;;;;;;;2919:325:0;:::o;3740:1066::-;1934:11:19;;;;;;;;;;;1926:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:5;2056:11;;:19;;;;;;;;;;;;;;;;;;3970:14:0;;3962:4;:22;;3954:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4030:15;:25;4046:8;4030:25;;;;;;;;;;;;;;;;;;;;;4029:26;4021:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4131:15;:25;4147:8;4131:25;;;;;;;;;;;;;;;;;;;;;4130:26;4122:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4229:18;4241:5;4229:11;:18::i;:::-;4221:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4327:16;;;;;;;;;;;:28;;;4356:6;;4327:147;;;;;;;;4373:5;4365:14;;4327:147;;;;4389:8;4381:17;;4327:147;;;;4408:8;4400:17;;4327:147;;;;4427:10;4419:19;;4327:147;;;;4448:8;4440:17;;4327:147;;;;4459:4;4327:147;;;;4465:7;4327:147;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4327:147:0;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4327:147:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:147:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4327:147:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4327:147:0;;;;;;;;;;;;;;;;4319:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4536:4;4508:15;:25;4524:8;4508:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;4574:4;4546:15;:25;4562:8;4546:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;4618:4;4584:21;:31;4606:8;4584:31;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;4677:53;4694:10;4706:8;4716:4;4722:7;4677:16;:53::i;:::-;4786:8;4742:59;;;4753:10;4765:8;4775;4796:4;4742:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:4:19;2230:11;;:18;;;;;;;;;;;;;;;;;;3740:1066:0;;;;;;;;;:::o;4550:93:3:-;4593:7;4615:5;4621:16;;;;;;;;;;;4615:23;;;;;;;;;;;4608:30;;4550:93;:::o;783:39::-;;;;;;;;;;;;;;;;;;:::o;4820:847:0:-;1934:11:19;;;;;;;;;;;1926:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:5;2056:11;;:19;;;;;;;;;;;;;;;;;;5034:14:0;;5026:4;:22;;5018:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5094:21;:31;5116:8;5094:31;;;;;;;;;;;;;;;;;;;;;5093:32;5085:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:20;5216:6;5203:12;:20::i;:::-;5195:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5303:14;;;;;;;;;;;:26;;;5330:7;;5303:128;;;;;;;;5348:6;5340:15;;5303:128;;;;5365:8;5357:17;;5303:128;;;;5384:10;5376:19;;5303:128;;;;5405:8;5397:17;;5303:128;;;;5416:4;5303:128;;;;5422:7;5303:128;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5303:128:0;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5303:128:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5303:128:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5303:128:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5303:128:0;;;;;;;;;;;;;;;;5295:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5497:4;5463:21;:31;5485:8;5463:31;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;5555:51;5570:10;5582:8;5592:4;5598:7;5555:14;:51::i;:::-;5647:8;5617:45;;;5624:10;5636:8;5657:4;5617:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:4:19;2230:11;;:18;;;;;;;;;;;;;;;;;;4820:847:0;;;;;;;;:::o;4284:220:3:-;4342:4;4372:1;4362:11;;:6;:11;4358:50;;;4394:5;4387:12;;;;4358:50;4429:17;;4419:6;:27;4415:65;;;4467:4;4460:11;;;;4415:65;4494:5;4487:12;;4284:220;;;;:::o;731:48::-;774:5;731:48;:::o;442:29:0:-;;;;:::o;6084:104::-;6139:4;6158:15;:25;6174:8;6158:25;;;;;;;;;;;;;;;;;;;;;6151:32;;6084:104;;;:::o;636:22:3:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;283:114::-;320:77;283:114;:::o;601:31::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;845::0:-;;;;;;;;;;;;;:::o;700:27:3:-;;;;;;;;;;;;;:::o;2706:1154::-;2755:12;2775:19;2797:9;;;;;;;;;;;2775:31;;2847:6;;;;;;;;;;;2836:17;;2843:1;2836:17;;;2820:33;;:12;:33;;;;2812:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:1;2911:9;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:24;2958:5;2931:32;;2969:12;2987:13;3012:8;3023:1;3012:12;;3007:355;3030:6;;;;;;;;;;;3026:10;;:1;:10;;;3007:355;;;3075:1;3070;3055:12;:16;;;;;;;;:21;;;3051:225;;;3095:16;3088:23;;3129:5;3135:1;3129:8;;;;;;;;;;;;;;;;;;3121:16;;3168;3148:14;3163:1;3148:17;;;;;;;;;;;;;;;;;:36;;;;3051:225;;;3216:14;3231:1;3216:17;;;;;;;;;;;;;;;;;;3209:24;;3251:16;3243:24;;3051:225;3303:26;3317:4;3323:5;3303:13;:26::i;:::-;3284:45;;3354:1;3338:17;;;;;;;;;;;3038:3;;;;;;;3007:355;;;;774:5;3387:42;;3407:1;3388:16;;;;;;;;;;;:20;3387:42;;;;;;;;3368:16;;:61;;;;;;;;;;;;;;;;;;3461:16;3435:5;3441:16;;;;;;;;;;;3435:23;;;;;;;;;;:42;;;;3561:10;;;;;;;;;;;3514:57;;3538:18;;;;;;;;;;;3522:12;3515:41;3514:57;;;3510:319;;3608:14;;3588:17;:34;;;;3649:16;3632:14;:33;;;;3703:18;;;;;;;;;;;3679:21;;:42;;;;;;;;;;;;;;;;;;3759:12;3731:18;;:41;;;;;;;;;;;;;;;;;;3787:35;3800:21;;;;;;;;;;;3787:35;;;;;;;;;;;;;;;;;;;;;;3510:319;3854:1;3842:9;;;;;;;;;;;:13;3835:20;;;;;;2706:1154;;;:::o;422:143:2:-;485:14;;472:9;:27;464:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:143::o;569:592::-;737:1;724:9;:14;716:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:1;810:7;:12;802:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:12;905:10;:15;;944:4;927:14;;:21;905:48;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;886:67:2;;;967:7;959:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:1;1026:4;:8;1022:135;;;1058:8;:13;;1078:4;1058:29;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1044:43:2;;;;;1103:7;1095:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:135;569:592;;;;;:::o;1165:589::-;1331:1;1318:9;:14;1310:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:1;1404:7;:11;1396:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:12;1498:10;:15;;1537:4;1520:14;;:21;1498:48;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1479:67:2;;;1560:7;1552:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:1;1619:4;:8;1615:135;;;1651:8;:13;;1671:4;1651:29;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1637:43:2;;;;;1696:7;1688:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1615:135;1165:589;;;;;:::o",
  "source": "pragma solidity ^0.5.17;\n\nimport \"./AMR.sol\";\n\ncontract ETHAMR is AMR {\n  constructor(\n    WVerifier _withdrawVerifier,\n    RVerifier _rewardVerifier,\n    uint256 _d_denomination,\n    uint256 _r_denomination,\n    uint32 _merkleTreeHeight,\n    uint32 _blockCount,\n    address _operator\n  ) AMR(_withdrawVerifier, _rewardVerifier, _d_denomination, _r_denomination, _merkleTreeHeight, _blockCount, _operator) public {\n  }\n\n  function _processDeposit() internal {\n    require(msg.value == d_denomination, \"Please send `mixDenomination` ETH along with transaction\");\n  }\n\n  function _processWithdraw(address payable _recipient, address payable _relayer, uint256 _fee, uint256 _refund) internal {\n    // sanity checks\n    require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\n    require(_refund == 0, \"Refund value is supposed to be zero for ETH instance\");\n\n    (bool success, ) = _recipient.call.value(d_denomination - _fee)(\"\");\n    require(success, \"payment to _recipient did not go thru\");\n    if (_fee > 0) {\n      (success, ) = _relayer.call.value(_fee)(\"\");\n      require(success, \"payment to _relayer did not go thru\");\n    }\n  }\n\n  function _processReward(address payable _recipient, address payable _relayer, uint256 _fee, uint256 _reward) internal {\n    // sanity checks\n    require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\n    require(_reward== 0, \"Refund value is supposed to be zero for ETH instance\");\n\n    (bool success, ) = _recipient.call.value(r_denomination - _fee)(\"\");\n    require(success, \"payment to _recipient did not go thru\");\n    if (_fee > 0) {\n      (success, ) = _relayer.call.value(_fee)(\"\");\n      require(success, \"payment to _relayer did not go thru\");\n    }\n  }\n}\n",
  "sourcePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/ETHAMR.sol",
  "ast": {
    "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/ETHAMR.sol",
    "exportedSymbols": {
      "ETHAMR": [
        1039
      ]
    },
    "id": 1040,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 866,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/AMR.sol",
        "file": "./AMR.sol",
        "id": 867,
        "nodeType": "ImportDirective",
        "scope": 1040,
        "sourceUnit": 566,
        "src": "26:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 868,
              "name": "AMR",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 565,
              "src": "66:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AMR_$565",
                "typeString": "contract AMR"
              }
            },
            "id": 869,
            "nodeType": "InheritanceSpecifier",
            "src": "66:3:2"
          }
        ],
        "contractDependencies": [
          565,
          1481,
          4787
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1039,
        "linearizedBaseContracts": [
          1039,
          565,
          4787,
          1481
        ],
        "name": "ETHAMR",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "413:5:2",
              "statements": []
            },
            "documentation": null,
            "id": 896,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 886,
                    "name": "_withdrawVerifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 871,
                    "src": "293:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WVerifier_$15",
                      "typeString": "contract WVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 887,
                    "name": "_rewardVerifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 873,
                    "src": "312:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RVerifier_$27",
                      "typeString": "contract RVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 888,
                    "name": "_d_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 875,
                    "src": "329:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 889,
                    "name": "_r_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "346:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 890,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 879,
                    "src": "363:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 891,
                    "name": "_blockCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "382:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 892,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 883,
                    "src": "395:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 893,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 885,
                  "name": "AMR",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 565,
                  "src": "289:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AMR_$565_$",
                    "typeString": "type(contract AMR)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "289:116:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "name": "_withdrawVerifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "91:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WVerifier_$15",
                    "typeString": "contract WVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 870,
                    "name": "WVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15,
                    "src": "91:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WVerifier_$15",
                      "typeString": "contract WVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "name": "_rewardVerifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "124:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RVerifier_$27",
                    "typeString": "contract RVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 872,
                    "name": "RVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "124:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RVerifier_$27",
                      "typeString": "contract RVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "name": "_d_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "155:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "name": "_r_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "184:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "213:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "name": "_blockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "243:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "267:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "85:203:2"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:2"
            },
            "scope": 1039,
            "src": "74:344:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "458:107:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 900,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "472:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "472:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "d_denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "485:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "472:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "501:58:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "464:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:96:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "464:96:2"
                }
              ]
            },
            "documentation": null,
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:2"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:2"
            },
            "scope": 1039,
            "src": "422:143:2",
            "stateMutability": "nonpayable",
            "superFunction": 192,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "689:472:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "724:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "724:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "737:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "724:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "716:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "716:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 916,
                          "src": "810:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "821:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "810:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "824:54:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:77:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "802:77:2"
                },
                {
                  "assignments": [
                    935,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "887:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "887:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 945,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "950:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 939,
                            "name": "d_denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "927:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 940,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "944:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "927:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 936,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "905:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "905:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "905:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "905:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "886:67:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 947,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "967:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "976:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "959:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "959:57:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 951,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "1026:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1026:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 971,
                  "nodeType": "IfStatement",
                  "src": "1022:135:2",
                  "trueBody": {
                    "id": 970,
                    "nodeType": "Block",
                    "src": "1036:121:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 954,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 935,
                                "src": "1045:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 955,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1044:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1084:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 959,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 914,
                                  "src": "1078:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 956,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 912,
                                    "src": "1058:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 957,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1058:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1058:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                  "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                                }
                              },
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1058:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1058:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1044:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "1044:43:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 966,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "1103:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1112:37:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 965,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4805,
                              4806
                            ],
                            "referencedDeclaration": 4806,
                            "src": "1095:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1095:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 969,
                        "nodeType": "ExpressionStatement",
                        "src": "1095:55:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 973,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "595:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 912,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "623:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "649:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "663:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:85:2"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:2"
            },
            "scope": 1039,
            "src": "569:592:2",
            "stateMutability": "nonpayable",
            "superFunction": 399,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "1283:471:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 985,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "1318:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1318:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1331:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1318:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1334:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "1310:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 993,
                          "name": "_reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "1404:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1414:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1404:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:54:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "1396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:76:2"
                },
                {
                  "assignments": [
                    1000,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1037,
                      "src": "1480:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1010,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1004,
                            "name": "r_denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "1520:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1005,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "1537:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1520:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1001,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "1498:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1498:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1498:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1479:67:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1560:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 1011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "1552:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1552:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "1552:57:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1016,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "1619:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1626:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1619:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1036,
                  "nodeType": "IfStatement",
                  "src": "1615:135:2",
                  "trueBody": {
                    "id": 1035,
                    "nodeType": "Block",
                    "src": "1629:121:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 1019,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1000,
                                "src": "1638:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 1020,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1637:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 1026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1677:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1024,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 979,
                                  "src": "1671:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1021,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 977,
                                    "src": "1651:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1651:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1651:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                  "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                                }
                              },
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1651:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1651:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1637:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1029,
                        "nodeType": "ExpressionStatement",
                        "src": "1637:43:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1031,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "1696:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 1032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1705:37:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 1030,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4805,
                              4806
                            ],
                            "referencedDeclaration": 4806,
                            "src": "1688:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1688:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1034,
                        "nodeType": "ExpressionStatement",
                        "src": "1688:55:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1189:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1217:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1243:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "name": "_reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1257:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:85:2"
            },
            "returnParameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:2"
            },
            "scope": 1039,
            "src": "1165:589:2",
            "stateMutability": "nonpayable",
            "superFunction": 410,
            "visibility": "internal"
          }
        ],
        "scope": 1040,
        "src": "47:1709:2"
      }
    ],
    "src": "0:1757:2"
  },
  "legacyAST": {
    "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/ETHAMR.sol",
    "exportedSymbols": {
      "ETHAMR": [
        1039
      ]
    },
    "id": 1040,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 866,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/devildeer/Documents/amr-prototype/amr-poseidon-clean/contracts/AMR.sol",
        "file": "./AMR.sol",
        "id": 867,
        "nodeType": "ImportDirective",
        "scope": 1040,
        "sourceUnit": 566,
        "src": "26:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 868,
              "name": "AMR",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 565,
              "src": "66:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AMR_$565",
                "typeString": "contract AMR"
              }
            },
            "id": 869,
            "nodeType": "InheritanceSpecifier",
            "src": "66:3:2"
          }
        ],
        "contractDependencies": [
          565,
          1481,
          4787
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1039,
        "linearizedBaseContracts": [
          1039,
          565,
          4787,
          1481
        ],
        "name": "ETHAMR",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 895,
              "nodeType": "Block",
              "src": "413:5:2",
              "statements": []
            },
            "documentation": null,
            "id": 896,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 886,
                    "name": "_withdrawVerifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 871,
                    "src": "293:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WVerifier_$15",
                      "typeString": "contract WVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 887,
                    "name": "_rewardVerifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 873,
                    "src": "312:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RVerifier_$27",
                      "typeString": "contract RVerifier"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 888,
                    "name": "_d_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 875,
                    "src": "329:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 889,
                    "name": "_r_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "346:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 890,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 879,
                    "src": "363:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 891,
                    "name": "_blockCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "382:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 892,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 883,
                    "src": "395:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 893,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 885,
                  "name": "AMR",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 565,
                  "src": "289:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AMR_$565_$",
                    "typeString": "type(contract AMR)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "289:116:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "name": "_withdrawVerifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "91:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_WVerifier_$15",
                    "typeString": "contract WVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 870,
                    "name": "WVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15,
                    "src": "91:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WVerifier_$15",
                      "typeString": "contract WVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "name": "_rewardVerifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "124:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RVerifier_$27",
                    "typeString": "contract RVerifier"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 872,
                    "name": "RVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "124:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RVerifier_$27",
                      "typeString": "contract RVerifier"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "name": "_d_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "155:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "name": "_r_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "184:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "213:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "name": "_blockCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "243:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "267:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "85:203:2"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:2"
            },
            "scope": 1039,
            "src": "74:344:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "458:107:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 900,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "472:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "472:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "d_denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "485:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "472:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "501:58:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "464:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "464:96:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 906,
                  "nodeType": "ExpressionStatement",
                  "src": "464:96:2"
                }
              ]
            },
            "documentation": null,
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:2"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:2"
            },
            "scope": 1039,
            "src": "422:143:2",
            "stateMutability": "nonpayable",
            "superFunction": 192,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "689:472:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "724:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "724:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "737:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "724:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "740:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "716:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "716:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 928,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 916,
                          "src": "810:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "821:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "810:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "824:54:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:77:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "802:77:2"
                },
                {
                  "assignments": [
                    935,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "887:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "887:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 945,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "950:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 939,
                            "name": "d_denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "927:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 940,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "944:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "927:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 936,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "905:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "905:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "905:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "905:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "886:67:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 947,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 935,
                        "src": "967:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "976:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "959:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "959:57:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 951,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "1026:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1026:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 971,
                  "nodeType": "IfStatement",
                  "src": "1022:135:2",
                  "trueBody": {
                    "id": 970,
                    "nodeType": "Block",
                    "src": "1036:121:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 954,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 935,
                                "src": "1045:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 955,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1044:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1084:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 959,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 914,
                                  "src": "1078:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 956,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 912,
                                    "src": "1058:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 957,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1058:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1058:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                  "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                                }
                              },
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1058:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1058:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1044:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "1044:43:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 966,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "1103:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1112:37:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 965,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4805,
                              4806
                            ],
                            "referencedDeclaration": 4806,
                            "src": "1095:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1095:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 969,
                        "nodeType": "ExpressionStatement",
                        "src": "1095:55:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 973,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "595:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 912,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "623:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "649:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "663:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:85:2"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:2"
            },
            "scope": 1039,
            "src": "569:592:2",
            "stateMutability": "nonpayable",
            "superFunction": 399,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "1283:471:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 985,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "1318:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1318:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1331:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1318:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1334:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "1310:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 993,
                          "name": "_reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "1404:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1414:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1404:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:54:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "1396:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:76:2"
                },
                {
                  "assignments": [
                    1000,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1037,
                      "src": "1480:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1010,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1004,
                            "name": "r_denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "1520:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1005,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "1537:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1520:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1001,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 975,
                            "src": "1498:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1498:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                          "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1498:44:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1479:67:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "1560:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 1011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4805,
                        4806
                      ],
                      "referencedDeclaration": 4806,
                      "src": "1552:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1552:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "1552:57:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1016,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "1619:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1626:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1619:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1036,
                  "nodeType": "IfStatement",
                  "src": "1615:135:2",
                  "trueBody": {
                    "id": 1035,
                    "nodeType": "Block",
                    "src": "1629:121:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 1019,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1000,
                                "src": "1638:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 1020,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1637:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 1026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1677:2:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1024,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 979,
                                  "src": "1671:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1021,
                                    "name": "_relayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 977,
                                    "src": "1651:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1651:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1651:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                  "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                                }
                              },
                              "id": 1025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1651:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1651:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "1637:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1029,
                        "nodeType": "ExpressionStatement",
                        "src": "1637:43:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1031,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "1696:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 1032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1705:37:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 1030,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4805,
                              4806
                            ],
                            "referencedDeclaration": 4806,
                            "src": "1688:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1688:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1034,
                        "nodeType": "ExpressionStatement",
                        "src": "1688:55:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1189:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 977,
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1217:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 979,
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1243:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "name": "_reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "1257:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:85:2"
            },
            "returnParameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1283:0:2"
            },
            "scope": 1039,
            "src": "1165:589:2",
            "stateMutability": "nonpayable",
            "superFunction": 410,
            "visibility": "internal"
          }
        ],
        "scope": 1040,
        "src": "47:1709:2"
      }
    ],
    "src": "0:1757:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "commitment",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "leafIndex",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xd372214d98616c555c2fbc3e9e729a309374d6c2aa7c20e84c73c4af5e44e618": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "rewardNullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "Reward",
          "type": "event"
        },
        "0x1606ca2afee2c3dcc26cae165c508e922c6f2d01648c2ba5752393b1eb8e6c9d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "updateAtBlock",
              "type": "uint32"
            }
          ],
          "name": "RewardUpdate",
          "type": "event"
        },
        "0xb9632a5273eccb6a6c4f89035ced459ebb3db29e0ad807721982f4960602242d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "withdrawNullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "rewardNullifierHash",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relayer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        }
      },
      "links": {
        "Hasher": "0x0E73dc1A6C763521488d02E6A4D1710065Ab1c2C"
      },
      "address": "0xDE4337E320E5FbB80088a706E96d9770E311E985",
      "transactionHash": "0xf02df4704894ee7136fcbeed42960bbbb1ae6df66fa198c4b7500db3dd7923d1"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-29T19:12:10.889Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "changeOperator(address)": {
        "details": "operator can change his address "
      },
      "deposit(bytes32)": {
        "details": "Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.",
        "params": {
          "_commitment": "the note commitment, which is PedersenHash(nullifier + secret)"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isRedeemArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "updateWithdrawVerifier(address)": {
        "details": "allow operator to update SNARK verification keys. This is needed to update keys after the final trusted setup ceremony is held. After that operator rights are supposed to be transferred to zero address"
      },
      "withdraw(bytes,bytes32,bytes32,bytes32,address,address,uint256,uint256)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}